
//! Autogenerated weights for `pallet_data_store`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-03-31, STEPS: `1`, REPEAT: 50, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: None, WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/node-template
// benchmark
// --chain
// dev
// --pallet
// pallet_data_store
// --extrinsic
// *
// --repeat
// 50
// --output=./pallets/data-store/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

pub trait WeightInfo {
	fn store() -> Weight;
	fn retrieve() -> Weight;
	fn replace() -> Weight;
	fn delete() -> Weight;
	fn edit() -> Weight;
}

/// Weight functions for `pallet_data_store`.
pub struct DataStoreWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for DataStoreWeight<T> {
	// Storage: DataStore FileStorage (r:1 w:1)
	fn store() -> Weight {
		(10_207_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: DataStore FileStorage (r:1 w:0)
	fn retrieve() -> Weight {
		(9_499_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
	}
	// Storage: DataStore FileStorage (r:2 w:1)
	fn replace() -> Weight {
		(13_311_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: DataStore FileStorage (r:1 w:0)
	fn delete() -> Weight {
		(9_343_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
	}
	// Storage: DataStore FileStorage (r:1 w:1)
	fn edit() -> Weight {
		(12_192_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}
